# Generated by Django 5.1.4 on 2025-01-29 04:05

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('webapp', '0004_deletedaccount'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='Ingredient name should only contain letters and spaces.', regex='^[A-Za-z ]+$')])),
            ],
        ),
        migrations.RemoveField(
            model_name='recipes',
            name='author_group',
        ),
        migrations.RemoveField(
            model_name='recipes',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='recipes',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='recipes',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='recipes',
            name='author',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='foodtype',
            name='description',
            field=models.TextField(validators=[django.core.validators.RegexValidator(message='Description can contain letters, numbers, commas, and periods.', regex='^[A-Za-z0-9., ]+$')]),
        ),
        migrations.AlterField(
            model_name='foodtype',
            name='type',
            field=models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='Type should only contain letters and spaces.', regex='^[A-Za-z ]+$')]),
        ),
        migrations.AlterField(
            model_name='recipes',
            name='description',
            field=models.TextField(validators=[django.core.validators.RegexValidator(message='Description can contain letters, numbers, and punctuation.', regex='^[A-Za-z0-9.,!? ]+$')]),
        ),
        migrations.AlterField(
            model_name='recipes',
            name='food_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.foodtype'),
        ),
        migrations.AlterField(
            model_name='recipes',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Recipe name can only contain letters, numbers, and spaces.', regex="^[A-Za-z0-9\\s']+$")]),
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.recipes')),
            ],
        ),
        migrations.AddField(
            model_name='recipes',
            name='ingredients',
            field=models.ManyToManyField(through='webapp.RecipeIngredient', to='webapp.ingredient'),
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('instruction', models.TextField(validators=[django.core.validators.RegexValidator(message='Steps should only contain letters, numbers, and punctuation.', regex='^[A-Za-z0-9.,!? ]+$')])),
                ('ingredient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webapp.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.recipes')),
            ],
        ),
    ]
